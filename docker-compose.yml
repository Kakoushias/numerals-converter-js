services:
  # Redis - shared across prod and dev profiles
  redis:
    image: redis:7-alpine
    container_name: numerals-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - numerals-network
    profiles: ["prod", "dev"]

  # Redis for testing (separate database)
  redis-test:
    image: redis:7-alpine
    container_name: numerals-redis-test
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - test-network
    profiles: ["test"]

  # PostgreSQL - shared across prod and dev profiles
  postgres:
    image: postgres:15-alpine
    container_name: numerals-postgres
    environment:
      POSTGRES_DB: numerals
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - numerals-network
    profiles: ["prod", "dev"]

  # PostgreSQL for testing (separate database)
  postgres-test:
    image: postgres:15-alpine
    container_name: numerals-postgres-test
    environment:
      POSTGRES_DB: numerals_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - test-network
    profiles: ["test"]

  # Backend - PRODUCTION
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: numerals-backend-prod
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_TYPE: redis
      REDIS_URL: redis://redis:6379
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/numerals
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_TIME_WINDOW: 60000
      CORS_ORIGIN: http://localhost:5173,http://localhost:5174,http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      start_period: 15s
      retries: 5
    networks:
      - numerals-network
    profiles: ["prod"]

  # Backend - DEVELOPMENT
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: numerals-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_TYPE: redis
      REDIS_URL: redis://redis:6379
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/numerals
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_TIME_WINDOW: 60000
      CORS_ORIGIN: http://localhost:5173,http://localhost:5174,http://localhost:5175,http://localhost:3000
      LOG_LEVEL: debug
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: npm run dev
    networks:
      - numerals-network
    profiles: ["dev"]

  # Frontend - PRODUCTION
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: numerals-frontend-prod
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "5174:80"
    depends_on:
      - backend-prod
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3
    networks:
      - numerals-network
    profiles: ["prod"]

  # Frontend - DEVELOPMENT
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: numerals-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/postcss.config.js:/app/postcss.config.js
      - /app/node_modules
    depends_on:
      - backend-dev
    command: npm run dev -- --host 0.0.0.0
    networks:
      - numerals-network
    profiles: ["dev"]

  # Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: numerals-test-runner
    environment:
      NODE_ENV: test
      REDIS_URL: redis://redis-test:6379/1
      POSTGRES_URL: postgresql://postgres:password@postgres-test:5432/numerals_test
      TEST_REDIS_URL: redis://redis-test:6379/1
      VITE_API_URL: http://localhost:3001
    depends_on:
      redis-test:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
    networks:
      - test-network
    command: npm test
    profiles: ["test"]

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  numerals-network:
    driver: bridge
  test-network:
    driver: bridge
