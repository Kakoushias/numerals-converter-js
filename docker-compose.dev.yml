services:
  # Redis Database (reuse from production)
  redis:
    image: redis:7-alpine
    container_name: numerals-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - numerals-network-dev

  # PostgreSQL Database (reuse from production)
  postgres:
    image: postgres:15-alpine
    container_name: numerals-postgres-dev
    environment:
      POSTGRES_DB: numerals
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - numerals-network-dev

  # Backend Development Service
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder  # Use builder stage which has all deps
    container_name: numerals-backend-dev
    working_dir: /app
    volumes:
      - ./backend/src:/app/src  # Only mount src for hot reload
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
    command: npm run dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_TYPE: redis
      REDIS_URL: redis://redis:6379
      POSTGRES_URL: postgresql://postgres:password@postgres:5432/numerals
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_TIME_WINDOW: 60000
      CORS_ORIGIN: http://localhost:5173,http://localhost:5174,http://localhost:5175,http://localhost:3000
      LOG_LEVEL: info
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - numerals-network-dev

  # Frontend Development Service
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder  # Use builder stage which has all deps
    container_name: numerals-frontend-dev
    working_dir: /app
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/postcss.config.js:/app/postcss.config.js
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3001
    depends_on:
      - backend-dev
    networks:
      - numerals-network-dev

volumes:
  redis_data_dev:
    driver: local
  postgres_data_dev:
    driver: local

networks:
  numerals-network-dev:
    driver: bridge
